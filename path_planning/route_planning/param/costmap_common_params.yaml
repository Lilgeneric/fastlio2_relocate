#机器人几何参，如果机器人是圆形，设置 robot_radius,如果是其他形状设置 footprint
robot_radius: 0.12 #圆形
# footprint: [[-0.12, -0.12], [-0.12, 0.12], [0.12, 0.12], [0.12, -0.12]] #其他形状

obstacle_range: 3.0 # 用于障碍物探测，比如: 值为 3.0，意味着检测到距离小于 3 米的障碍物时，就会引入代价地图
raytrace_range: 3.5 # 用于清除障碍物，比如：值为 3.5，意味着清除代价地图中 3.5 米以外的障碍物


#膨胀半径，扩展在碰撞区域以外的代价区域，使得机器人规划路径避开障碍物
inflation_radius: 0.6
#代价比例系数，越大则代价值越小
cost_scaling_factor: 3.0

#地图类型
#map_type: costmap
#导航包所需要的传感器
observation_sources: scan

# 雷达点云配置（添加投影范围过滤参数）
scan: {
  sensor_frame: velodyne,
  data_type: PointCloud2,
  topic: cloud_registered,
  marking: true,  # 用于标记障碍物
  clearing: true, # 用于清除障碍物
  
  # 自定义投影范围（过滤条件）
  min_obstacle_height: 0.1,  # 点云z轴最小值（只保留z≥0.0的点）
  max_obstacle_height: 1.0,  # 点云z轴最大值（只保留z≤1.0的点）
  obstacle_min_range: 0.5,   # 点云到传感器的最小距离（过滤过近的点）
  obstacle_max_range: 3.0    # 点云到传感器的最大距离（过滤过远的点，与obstacle_range呼应）
}
